#include <gtest/gtest.h>

#include "PmergeMe.hpp"

// ---------- template function ---------- //

template<typename Container>
Container returnSortedSeq(const Container &seq) {
	Container sortedSeq(seq);
	std::sort(sortedSeq.begin(), sortedSeq.end());
	return sortedSeq;
}

template<typename Container>
void validateSortable(Container input) {
	const Container &expect = returnSortedSeq(input);
	const Container &actual = mergeInsertionSort(input);
	EXPECT_EQ(expect, actual);
}

// ---------- test macro ---------- //

TEST(LoadTest, _50Kinds) {
	validateSortable(std::vector<int>{221,22745,51175,26521,95921,75666,82754,41158,77142,59639,12234,51406,50233,47105,34305,69450,77838,96334,64166,66711,95294,81062,66387,5698,88813,61810,5584,25369,4393,56635,10583,20064,20733,97452,70975,74896,75460,86458,38542,81032,48637,14911,28191,681,58992,27971,52967,97684,86724,89645});
}

TEST(LoadTest, _100Kinds) {
	validateSortable(std::vector<int>{22407,81301,15270,59291,64509,2448,99554,51619,78571,10381,5578,1585,21522,97672,58713,8551,7503,66703,93241,23212,73276,20023,20503,8004,90605,62599,71223,51428,31242,23251,97011,80138,33177,94676,20334,24184,24333,7769,63181,46985,27217,94169,26882,20946,64950,5562,49746,7837,61860,31613,61418,13201,72954,21611,53439,78242,28682,86002,90079,83150,5968,90277,20403,12558,78820,49838,33349,95586,30665,57163,664,14612,70404,66306,174,70115,46317,82761,86176,38754,4026,7658,52079,52851,57883,27602,95263,41565,16379,39765,38336,92469,50722,35170,88985,73639,19526,60023,68023,81139});
}
